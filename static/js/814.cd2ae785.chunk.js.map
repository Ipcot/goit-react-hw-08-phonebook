{"version":3,"file":"static/js/814.cd2ae785.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsFormInput = styled.input`\n  display: block;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n`;\n\nexport const FormStyled = styled.form`\n  padding: ${p => p.theme.space[5]}px;\n  border: 1px solid ${p => p.theme.colors.black};\n`;\nexport const ContactsFormLabel = styled.label`\n  display: block;\n  margin: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${p => p.theme.space[4]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border: ${p => p.theme.borders.greyBorder};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.normal};\n  :hover {\n    background-color: ${p => p.theme.colors.hover};\n  }\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  ContactsFormInput,\n  FormStyled,\n  ContactsFormLabel,\n  Button,\n} from './ContactsForm.styled';\nimport { useAddContactsMutation, useGetContactsQuery } from 'redux/contacts';\n\nexport const ContactsForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data } = useGetContactsQuery();\n\n  const [addContact] = useAddContactsMutation();\n\n  const nameId = nanoid(5);\n  const numberId = nanoid(5);\n\n  const handleInputValueChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onFormSubmit = (name, number) => {\n    if (data.find(item => item.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    addContact({ name, number });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onFormSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <FormStyled autoComplete=\"off\" onSubmit={handleSubmit}>\n        <ContactsFormLabel htmlFor={nameId}>Name</ContactsFormLabel>\n        <ContactsFormInput\n          id={nameId}\n          value={name}\n          onChange={handleInputValueChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n        <ContactsFormLabel htmlFor={numberId}>Phone</ContactsFormLabel>\n        <ContactsFormInput\n          id={numberId}\n          value={number}\n          onChange={handleInputValueChange}\n          type=\"<text>\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button type=\"submit\">Add contact</Button>\n      </FormStyled>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n  padding: 0;\n  outline: none;\n  margin-left: 33%;\n  text-align: center;\n  :hover,\n  :active,\n  :focus {\n    border: ${p => p.theme.borders.active};\n  }\n`;\n","import { Input } from './Filter.styled';\nimport { Box } from '@mui/material';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterChange } from 'redux/contacts';\nimport { getFilter } from 'redux/contacts';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChange = value => {\n    dispatch(filterChange(value));\n  };\n  return (\n    <>\n      <Box textAlign=\"center\" sx={{ color: 'green' }} as=\"p\">\n        Find contacts by name\n      </Box>\n      <Input\n        autoComplete=\"off\"\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => handleChange(e.target.value)}\n      ></Input>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactInfo = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: ${p => p.theme.space[3]}px;\n`;\n\nexport const ContactItemButton = styled.button`\n  display: flex;\n  align-items: bottom;\n  gap: 5px;\n  border: ${p => p.theme.borders.greyBorder};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: ${p => p.theme.shadows.normal};\n  > svg {\n    color: blue;\n  }\n  :hover {\n    background-color: ${p => p.theme.colors.hover};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { MdDelete } from 'react-icons/md';\nimport { ContactInfo, ContactItemButton } from './ContactItem.styled';\nimport { useDeleteContactMutation } from 'redux/contacts';\n\nexport const ContactItem = ({ item: { id, number, name } }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n  return (\n    <>\n      <ContactInfo key={id}>\n        {name}: {number}\n        <ContactItemButton\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n          disabled={isLoading}\n        >\n          <MdDelete />\n          Delete\n        </ContactItemButton>\n      </ContactInfo>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsListUL = styled.ul`\n  padding: 0;\n`;\n\nexport const WarningMessage = styled.p`\n  color: ${p => p.theme.colors.red};\n  text-align: center;\n`;\n","import { ContactItem } from 'components/ContactItem';\nimport { WarningMessage, ContactsListUL } from './ContactList.styled';\nimport { useGetContactsQuery } from 'redux/contacts';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contacts';\nimport { Loader } from 'components/Loader';\n\nexport const ContactList = () => {\n  const { data, isLoading } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const filteredName = data?.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  if (!filteredName) {\n    return;\n  }\n\n  return (\n    <ContactsListUL>\n      {filteredName.length === 0 && filter !== '' && (\n        <WarningMessage>No such contact Name</WarningMessage>\n      )}\n      {filteredName.length === 0 && filter === '' && (\n        <WarningMessage>Contacts list empty</WarningMessage>\n      )}\n      {isLoading ? (\n        <Loader />\n      ) : (\n        filteredName.map(item => {\n          return <ContactItem item={item} key={item.id} />;\n        })\n      )}\n    </ContactsListUL>\n  );\n};\n","import { Box } from '@mui/material';\nimport { ContactsForm } from 'components/ContactsForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\n\n\nexport const Contacts = () => {\n  return (\n    <Box px=\"30%\">\n      <Box textAlign=\"center\" sx={{ color: 'green' }} as=\"h1\">\n        Phonebook\n      </Box>\n      <ContactsForm />\n     \n      <Box textAlign=\"center\" sx={{ color: 'green' }} as=\"h2\">\n        Contacts\n      </Box>\n      <Filter />\n      <ContactList />\n    </Box>\n  );\n};\n"],"names":["ContactsFormInput","styled","p","theme","space","FormStyled","colors","black","ContactsFormLabel","Button","borders","greyBorder","radii","normal","shadows","hover","ContactsForm","useState","name","setName","number","setNumber","data","useGetContactsQuery","useAddContactsMutation","addContact","nameId","nanoid","numberId","handleInputValueChange","e","target","value","reset","autoComplete","onSubmit","preventDefault","find","item","alert","onFormSubmit","htmlFor","id","onChange","type","pattern","title","required","Input","active","Filter","dispatch","useDispatch","filter","useSelector","getFilter","Box","textAlign","sx","color","as","filterChange","ContactInfo","ContactItemButton","ContactItem","useDeleteContactMutation","deleteContact","isLoading","onClick","disabled","ContactsListUL","WarningMessage","red","ContactList","filteredName","toLowerCase","includes","length","Loader","map","Contacts","px"],"sourceRoot":""}